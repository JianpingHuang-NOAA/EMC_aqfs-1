#!/bin/ksh
######################################################################
#  UNIX Script Documentation Block
#                      .
# Script name:         exaqm_nam_prep.sh
# Script description:  Run nam product generator for CMAQ
#
# Abstract: This script runs 0-48 h NAM PRDGEN for CMAQ
#
# Script history log:
# 2003-07-03    Marina Tsidulko
# 2004-03-31    Pius Lee, netcdf independent and append gfs ozone
# 2004-04-01    Luc, modified for production
######################################################################
set -xa
msg="JOB $job HAS BEGUN"
postmsg "$jlogfile" "$msg"

cd $DATA

echo "Start of WRF_prdgen Job"
#========pwet -Z2 fhr
typeset -Z2 fhr
export fhr=00

if [ ${cycle} = 't00z' -o ${cycle} = 't18z' ]
then
   export endfhr=06
elif [  ${cycle} = 't06z' ]
then
   export endfhr=48
else
   export endfhr=48
fi

cp $PARMaqm/aqm_46prss_prss.ctl master3.ctl
while [ $fhr -le $endfhr ]
do
  ic=1
  while [ $ic -lt 1000 ]
  do
    if [ -s $COMIN/aqm_gfs${cyc}_$fhr.grb ]
    then
        ln -s -f $COMIN/aqm_gfs${cyc}_$fhr.grb  .
   break
    else
          let "ic=ic+1"
          sleep 10
      fi

      if [ $ic -ge 180 ]
      then
      err_exit "COULD NOT LOCATE:$COMIN/aqm_gfs${cyc}_$fhr.grb"
      fi
    done

  export pgm=aqm_nmm_prep
  . prep_step
  export XLFRTEOPTS="unit_vars=yes"
##export HR_CENTERED=Y
  export XLFUNIT_10="master3.ctl"
  export XLFUNIT_21="$FIXaqm/aqm_wgt_4_138_aqf"
  export XLFUNIT_41="$PARMnam/nam_kwbx.tbl"
  export XLFUNIT_42="$PARMnam/nam_time.tbl"
  export XLFUNIT_43="$PARMnam/nam_parm.tbl"
  export XLFUNIT_44="$PARMnam/nam_grid.tbl"
  export XLFUNIT_45="$PARMnam/nam_levl.tbl"

  cat <<EOF5 >input${fhr}.prd
aqm_gfs${cyc}_$fhr.grb
EOF5
  echo 'about to cat input'
  cat input${fhr}.prd

  startmsg
  $EXECaqm/aqm_post_5xwrf < input${fhr}.prd >> $pgmout 2>errfile
  export err=$?;err_chk

  cp  $DATA/meso.gfsO3${fhr} $DATA/aqm.${cycle}.gfs$fhr.tm00
  rm -f $DATA/meso.gfsO3${fhr}
  cat $DATA/aqm.${cycle}.gfs$fhr.tm00 $COMIN/aqm.${cycle}.prss${fhr} > $DATA/meso.gfsO3${fhr} 

  if [ "$SENDCOM" = 'YES' ]
  then
  cp $DATA/meso.gfsO3${fhr} $COMOUT/aqm.${cycle}_O3_${fhr}
  ln -s $DATA/meso.gfsO3${fhr} $DATA/aqm.${cycle}_O3_${fhr}
  fi

  let "fhr=fhr+3"
  typeset -Z2 fhr
done

echo EXITING $0

$USHaqm/aqm_5xwrf_gfs_138hbl.sh

$USHaqm/aqm_5xwrf_hrly_138hbl.sh

########################################################

msg='ENDED NORMALLY.'
postmsg "$jlogfile" "$msg"

################## END OF SCRIPT #######################

exit
